// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  STUDENT
  TEACHER
}

enum AssignmentType {
  ENGLISH
  MATH
}

model users {
  id         Int      @id @default(autoincrement())
  user_id    String   @unique @db.Uuid
  full_name  String   @db.VarChar(256)
  email      String   @unique
  password   String?  @db.Text
  role       Role     @default(STUDENT)
  created_at DateTime @default(now()) @db.Timestamp()
  updated_at DateTime @updatedAt @db.Timestamp()

  assignments     assignments[] @relation("student_assignments")
  given_grades    grades[]      @relation("teacher_grades")
  received_grades grades[]      @relation("student_grades")

  @@index(fields: [full_name, email])
}

model assignments {
  id            Int            @id @default(autoincrement())
  assignment_id String         @unique @db.Uuid
  subject       AssignmentType
  title         String         @db.Text
  content       String         @db.Text
  created_at    DateTime       @default(now()) @db.Timestamp()
  updated_at    DateTime       @updatedAt @db.Timestamp()

  student_id String @db.Uuid
  student    users  @relation("student_assignments", fields: [student_id], references: [user_id])

  grade grades?

  @@index(fields: [subject])
}

model grades {
  id       Int    @id @default(autoincrement())
  grade    Int    @db.Integer
  feedback String @db.Text

  created_at DateTime @default(now()) @db.Timestamp()
  updated_at DateTime @updatedAt @db.Timestamp()

  assignment_id String      @unique @db.Uuid
  assignment    assignments @relation(fields: [assignment_id], references: [assignment_id])

  teacher_id String @db.Uuid
  teacher    users  @relation("teacher_grades", fields: [teacher_id], references: [user_id])

  student_id String @db.Uuid
  student    users  @relation("student_grades", fields: [student_id], references: [user_id])
}
